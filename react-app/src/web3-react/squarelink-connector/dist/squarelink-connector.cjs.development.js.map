{"version":3,"file":"squarelink-connector.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport invariant from 'tiny-invariant'\r\n\r\nconst chainIdToNetwork: { [network: number]: string } = {\r\n  1: 'mainnet',\r\n  3: 'ropsten',\r\n  4: 'rinkeby',\r\n  5: 'goerli',\r\n  42: 'kovan',\r\n  100: 'xdai'\r\n}\r\n\r\ntype Network = number | { chainId: number; [key: string]: any }\r\n\r\ninterface SquarelinkConnectorArguments {\r\n  clientId: string\r\n  networks: Network[]\r\n  options?: any\r\n}\r\n\r\nexport class SquarelinkConnector extends AbstractConnector {\r\n  private readonly clientId: string\r\n  private readonly networks: Network[]\r\n  private readonly options: any\r\n\r\n  public squarelink: any\r\n\r\n  constructor({ clientId, networks, options = {} }: SquarelinkConnectorArguments) {\r\n    const chainIds = networks.map((n): number => (typeof n === 'number' ? n : n.chainId))\r\n    invariant(\r\n      chainIds.every((c): boolean => !!chainIdToNetwork[c]),\r\n      `One or more unsupported networks ${networks}`\r\n    )\r\n    super({ supportedChainIds: chainIds })\r\n\r\n    this.clientId = clientId\r\n    this.networks = networks\r\n    this.options = options\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    if (!this.squarelink) {\r\n      const Squarelink = await import('squarelink').then(m => m?.default ?? m)\r\n      this.squarelink = new Squarelink(\r\n        this.clientId,\r\n        typeof this.networks[0] === 'number' ? chainIdToNetwork[this.networks[0]] : this.networks[0],\r\n        this.options\r\n      )\r\n    }\r\n\r\n    const provider = await this.squarelink.getProvider()\r\n\r\n    const account = await provider.enable().then((accounts: string[]): string => accounts[0])\r\n\r\n    return { provider, account }\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.squarelink.getProvider()\r\n  }\r\n\r\n  public async getChainId(): Promise<number | string> {\r\n    return this.squarelink.getProvider().then((provider: any) => provider.send('eth_chainId'))\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    return this.squarelink\r\n      .getProvider()\r\n      .then((provider: any) => provider.send('eth_accounts').then((accounts: string[]): string => accounts[0]))\r\n  }\r\n\r\n  public deactivate() {}\r\n}\r\n"],"names":["chainIdToNetwork","SquarelinkConnector","clientId","networks","options","chainIds","map","n","chainId","every","c","invariant","supportedChainIds","activate","squarelink","getProvider","provider","enable","then","accounts","account","m","Squarelink","getChainId","send","getAccount","deactivate","AbstractConnector"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAMA,gBAAgB,GAAkC;AACtD,KAAG,SADmD;AAEtD,KAAG,SAFmD;AAGtD,KAAG,SAHmD;AAItD,KAAG,QAJmD;AAKtD,MAAI,OALkD;AAMtD,OAAK;AANiD,CAAxD;IAiBaC,mBAAb;AAAA;;AAOE;;;QAAcC,gBAAAA;QAAUC,gBAAAA;4BAAUC;QAAAA,oCAAU;AAC1C,QAAMC,QAAQ,GAAGF,QAAQ,CAACG,GAAT,CAAa,UAACC,CAAD;AAAA,aAAgB,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAxB,GAA4BA,CAAC,CAACC,OAA9C;AAAA,KAAb,CAAjB;AACA,KACEH,QAAQ,CAACI,KAAT,CAAe,UAACC,CAAD;AAAA,aAAgB,CAAC,CAACV,gBAAgB,CAACU,CAAD,CAAlC;AAAA,KAAf,CADF,IAAAC,SAAS,8CAE6BR,QAF7B,CAAT,CAAA;AAIA,0CAAM;AAAES,MAAAA,iBAAiB,EAAEP;AAArB,KAAN;AAEA,UAAKH,QAAL,GAAgBA,QAAhB;AACA,UAAKC,QAAL,GAAgBA,QAAhB;AACA,UAAKC,OAAL,GAAeA,OAAf;;AACD;;AAlBH;;AAAA,SAoBeS,QApBf;AAAA;mBAqBS;;;+BASkB,OAAKC,UAAL,CAAgBC,WAAhB,mBAAjBC;iCAEgBA,QAAQ,CAACC,MAAT,GAAkBC,IAAlB,CAAuB,UAACC,QAAD;AAAA,mBAAgCA,QAAQ,CAAC,CAAD,CAAxC;AAAA,WAAvB,kBAAhBC;AAEN,mBAAO;AAAEJ,cAAAA,QAAQ,EAARA,QAAF;AAAYI,cAAAA,OAAO,EAAPA;AAAZ,aAAP;;;;;;YAbI,CAAC,OAAKN;iCACiB,mEAAO,YAAP,QAAqBI,IAArB,CAA0B,UAAAG,CAAC;AAAA;;AAAA,iCAAIA,CAAJ,oBAAIA,CAAC,WAAL,yBAAkBA,CAAlB;AAAA,WAA3B,kBAAnBC;AACN,mBAAKR,UAAL,GAAkB,IAAIQ,UAAJ,CAChB,OAAKpB,QADW,EAEhB,OAAO,OAAKC,QAAL,CAAc,CAAd,CAAP,KAA4B,QAA5B,GAAuCH,gBAAgB,CAAC,OAAKG,QAAL,CAAc,CAAd,CAAD,CAAvD,GAA4E,OAAKA,QAAL,CAAc,CAAd,CAF5D,EAGhB,OAAKC,OAHW,CAAlB;;;;;;AAYH,KAnCH;AAAA;AAAA;AAAA;;AAAA,SAqCeW,WArCf;AAAA;mBAsCW;;AAAP,6BAAO,OAAKD,UAAL,CAAgBC,WAAhB,EAAP;AACD,KAvCH;AAAA;AAAA;AAAA;;AAAA,SAyCeQ,UAzCf;AAAA;mBA0CW;;AAAP,6BAAO,OAAKT,UAAL,CAAgBC,WAAhB,GAA8BG,IAA9B,CAAmC,UAACF,QAAD;AAAA,eAAmBA,QAAQ,CAACQ,IAAT,CAAc,aAAd,CAAnB;AAAA,OAAnC,CAAP;AACD,KA3CH;AAAA;AAAA;AAAA;;AAAA,SA6CeC,UA7Cf;AAAA;mBA8CW;;AAAP,6BAAO,OAAKX,UAAL,CACJC,WADI,GAEJG,IAFI,CAEC,UAACF,QAAD;AAAA,eAAmBA,QAAQ,CAACQ,IAAT,CAAc,cAAd,EAA8BN,IAA9B,CAAmC,UAACC,QAAD;AAAA,iBAAgCA,QAAQ,CAAC,CAAD,CAAxC;AAAA,SAAnC,CAAnB;AAAA,OAFD,CAAP;AAGD,KAjDH;AAAA;AAAA;AAAA;;AAAA,SAmDSO,UAnDT,GAmDS,wBAnDT;;AAAA;AAAA,EAAyCC,mCAAzC;;;;"}