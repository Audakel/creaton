{
  "contractName": "ERC1820Implementer",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC1820Implementer} interface. Contracts may inherit from this and call {_registerInterfaceForAddress} to declare their willingness to be implementers. {IERC1820Registry-setInterfaceImplementer} should then be called for the registration to be complete.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"notice\":\"See {IERC1820Implementer-canImplementInterfaceForAddress}.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/introspection/ERC1820Implementer.sol\":\"ERC1820Implementer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/ERC1820Implementer.sol\":{\"keccak256\":\"0x5569c6fe074445c9418c3449d690195857139272f98bf1b02f732d339a59b732\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04abe8290d0e3fa470f662dcfc16c1cc3d79c60a16f2561121d537cb0d83978c\",\"dweb:/ipfs/Qmc5cxyb9yZ7vsT7zNqTW4MeTtoJc5rDTd9JeWFAmoFCsn\"]},\"@openzeppelin/contracts/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0x924528e397be10da447cf74935877b5455567cbcdb11058f0d336597805784b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96353a342efcd453ac10d920cc780d2ff86d585dba33496a353dc9604450697e\",\"dweb:/ipfs/QmaD6wyUvVmWYPyvrtEVfDogAEZxRneCpxHagpXK6cdXYM\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610111806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063249cb3fa14602d575b600080fd5b605660048036036040811015604157600080fd5b50803590602001356001600160a01b03166068565b60408051918252519081900360200190f35b6000828152602081815260408083206001600160a01b038516845290915281205460ff16609557600060d4565b604051602001808073455243313832305f4143434550545f4d4147494360601b8152506014019050604051602081830303815290604052805190602001205b939250505056fea26469706673582212204fe18f39b8aa8066f600a7a898fe5571d38ddc3a165f789c4048829ac215abc164736f6c63430007060033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063249cb3fa14602d575b600080fd5b605660048036036040811015604157600080fd5b50803590602001356001600160a01b03166068565b60408051918252519081900360200190f35b6000828152602081815260408083206001600160a01b038516845290915281205460ff16609557600060d4565b604051602001808073455243313832305f4143434550545f4d4147494360601b8152506014019050604051602081830303815290604052805190602001205b939250505056fea26469706673582212204fe18f39b8aa8066f600a7a898fe5571d38ddc3a165f789c4048829ac215abc164736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "412:962:54:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "412:962:54:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;738:236;;;;;;;;;;;;;;;;-1:-1:-1;738:236:54;;;;;;-1:-1:-1;;;;;738:236:54;;:::i;:::-;;;;;;;;;;;;;;;;;857:7;883:35;;;;;;;;;;;-1:-1:-1;;;;;883:44:54;;;;;;;;;;;;:84;;962:4;883:84;;;528:40;;;;;;-1:-1:-1;;;528:40:54;;;;;;;;;;;;;;;;;;;518:51;;;;;;883:84;876:91;738:236;-1:-1:-1;;;738:236:54:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC1820Implementer.sol\";\n\n/**\n * @dev Implementation of the {IERC1820Implementer} interface.\n *\n * Contracts may inherit from this and call {_registerInterfaceForAddress} to\n * declare their willingness to be implementers.\n * {IERC1820Registry-setInterfaceImplementer} should then be called for the\n * registration to be complete.\n */\ncontract ERC1820Implementer is IERC1820Implementer {\n    bytes32 constant private _ERC1820_ACCEPT_MAGIC = keccak256(abi.encodePacked(\"ERC1820_ACCEPT_MAGIC\"));\n\n    mapping(bytes32 => mapping(address => bool)) private _supportedInterfaces;\n\n    /**\n     * See {IERC1820Implementer-canImplementInterfaceForAddress}.\n     */\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address account) public view virtual override returns (bytes32) {\n        return _supportedInterfaces[interfaceHash][account] ? _ERC1820_ACCEPT_MAGIC : bytes32(0x00);\n    }\n\n    /**\n     * @dev Declares the contract as willing to be an implementer of\n     * `interfaceHash` for `account`.\n     *\n     * See {IERC1820Registry-setInterfaceImplementer} and\n     * {IERC1820Registry-interfaceHash}.\n     */\n    function _registerInterfaceForAddress(bytes32 interfaceHash, address account) internal virtual {\n        _supportedInterfaces[interfaceHash][account] = true;\n    }\n}\n",
  "sourcePath": "@openzeppelin/contracts/introspection/ERC1820Implementer.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/introspection/ERC1820Implementer.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        20995
      ],
      "IERC1820Implementer": [
        21009
      ]
    },
    "id": 20996,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20935,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:54"
      },
      {
        "absolutePath": "@openzeppelin/contracts/introspection/IERC1820Implementer.sol",
        "file": "./IERC1820Implementer.sol",
        "id": 20936,
        "nodeType": "ImportDirective",
        "scope": 20996,
        "sourceUnit": 21010,
        "src": "66:35:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20938,
              "name": "IERC1820Implementer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21009,
              "src": "443:19:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Implementer_$21009",
                "typeString": "contract IERC1820Implementer"
              }
            },
            "id": 20939,
            "nodeType": "InheritanceSpecifier",
            "src": "443:19:54"
          }
        ],
        "contractDependencies": [
          21009
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 20937,
          "nodeType": "StructuredDocumentation",
          "src": "103:308:54",
          "text": " @dev Implementation of the {IERC1820Implementer} interface.\n Contracts may inherit from this and call {_registerInterfaceForAddress} to\n declare their willingness to be implementers.\n {IERC1820Registry-setInterfaceImplementer} should then be called for the\n registration to be complete."
        },
        "fullyImplemented": true,
        "id": 20995,
        "linearizedBaseContracts": [
          20995,
          21009
        ],
        "name": "ERC1820Implementer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 20947,
            "mutability": "constant",
            "name": "_ERC1820_ACCEPT_MAGIC",
            "nodeType": "VariableDeclaration",
            "scope": 20995,
            "src": "469:100:54",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 20940,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "469:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "455243313832305f4143434550545f4d41474943",
                      "id": 20944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "545:22:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                        "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                      },
                      "value": "ERC1820_ACCEPT_MAGIC"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                        "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                      }
                    ],
                    "expression": {
                      "id": 20942,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "528:3:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 20943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "528:16:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 20945,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "528:40:54",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 20941,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "518:9:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 20946,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "518:51:54",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 20953,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nodeType": "VariableDeclaration",
            "scope": 20995,
            "src": "576:73:54",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(bytes32 => mapping(address => bool))"
            },
            "typeName": {
              "id": 20952,
              "keyType": {
                "id": 20948,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "584:7:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "576:44:54",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(bytes32 => mapping(address => bool))"
              },
              "valueType": {
                "id": 20951,
                "keyType": {
                  "id": 20949,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "603:7:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "595:24:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 20950,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "614:4:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              21008
            ],
            "body": {
              "id": 20976,
              "nodeType": "Block",
              "src": "866:108:54",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 20964,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20953,
                          "src": "883:20:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 20966,
                        "indexExpression": {
                          "id": 20965,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20956,
                          "src": "904:13:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "883:35:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 20968,
                      "indexExpression": {
                        "id": 20967,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20958,
                        "src": "919:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "883:44:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30783030",
                          "id": 20972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "962:4:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 20971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "954:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 20970,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "954:7:54",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 20973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "954:13:54",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 20974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "883:84:54",
                    "trueExpression": {
                      "id": 20969,
                      "name": "_ERC1820_ACCEPT_MAGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20947,
                      "src": "930:21:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 20963,
                  "id": 20975,
                  "nodeType": "Return",
                  "src": "876:91:54"
                }
              ]
            },
            "documentation": {
              "id": 20954,
              "nodeType": "StructuredDocumentation",
              "src": "656:77:54",
              "text": " See {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "249cb3fa",
            "id": 20977,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canImplementInterfaceForAddress",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 20960,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "839:8:54"
            },
            "parameters": {
              "id": 20959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20956,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 20977,
                  "src": "779:21:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 20955,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "779:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20958,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 20977,
                  "src": "802:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "778:40:54"
            },
            "returnParameters": {
              "id": 20963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20962,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20977,
                  "src": "857:7:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 20961,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "856:9:54"
            },
            "scope": 20995,
            "src": "738:236:54",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20993,
              "nodeType": "Block",
              "src": "1304:68:54",
              "statements": [
                {
                  "expression": {
                    "id": 20991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 20985,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20953,
                          "src": "1314:20:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 20988,
                        "indexExpression": {
                          "id": 20986,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20980,
                          "src": "1335:13:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1314:35:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 20989,
                      "indexExpression": {
                        "id": 20987,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20982,
                        "src": "1350:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1314:44:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 20990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1361:4:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1314:51:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20992,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:51:54"
                }
              ]
            },
            "documentation": {
              "id": 20978,
              "nodeType": "StructuredDocumentation",
              "src": "980:224:54",
              "text": " @dev Declares the contract as willing to be an implementer of\n `interfaceHash` for `account`.\n See {IERC1820Registry-setInterfaceImplementer} and\n {IERC1820Registry-interfaceHash}."
            },
            "id": 20994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterfaceForAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20980,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 20994,
                  "src": "1247:21:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 20979,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20982,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 20994,
                  "src": "1270:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1246:40:54"
            },
            "returnParameters": {
              "id": 20984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1304:0:54"
            },
            "scope": 20995,
            "src": "1209:163:54",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 20996,
        "src": "412:962:54"
      }
    ],
    "src": "33:1342:54"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts/introspection/ERC1820Implementer.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        20995
      ],
      "IERC1820Implementer": [
        21009
      ]
    },
    "id": 20996,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20935,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:54"
      },
      {
        "absolutePath": "@openzeppelin/contracts/introspection/IERC1820Implementer.sol",
        "file": "./IERC1820Implementer.sol",
        "id": 20936,
        "nodeType": "ImportDirective",
        "scope": 20996,
        "sourceUnit": 21010,
        "src": "66:35:54",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20938,
              "name": "IERC1820Implementer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21009,
              "src": "443:19:54",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Implementer_$21009",
                "typeString": "contract IERC1820Implementer"
              }
            },
            "id": 20939,
            "nodeType": "InheritanceSpecifier",
            "src": "443:19:54"
          }
        ],
        "contractDependencies": [
          21009
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 20937,
          "nodeType": "StructuredDocumentation",
          "src": "103:308:54",
          "text": " @dev Implementation of the {IERC1820Implementer} interface.\n Contracts may inherit from this and call {_registerInterfaceForAddress} to\n declare their willingness to be implementers.\n {IERC1820Registry-setInterfaceImplementer} should then be called for the\n registration to be complete."
        },
        "fullyImplemented": true,
        "id": 20995,
        "linearizedBaseContracts": [
          20995,
          21009
        ],
        "name": "ERC1820Implementer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 20947,
            "mutability": "constant",
            "name": "_ERC1820_ACCEPT_MAGIC",
            "nodeType": "VariableDeclaration",
            "scope": 20995,
            "src": "469:100:54",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 20940,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "469:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "455243313832305f4143434550545f4d41474943",
                      "id": 20944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "545:22:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                        "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                      },
                      "value": "ERC1820_ACCEPT_MAGIC"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4",
                        "typeString": "literal_string \"ERC1820_ACCEPT_MAGIC\""
                      }
                    ],
                    "expression": {
                      "id": 20942,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "528:3:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 20943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "528:16:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 20945,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "528:40:54",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 20941,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "518:9:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 20946,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "518:51:54",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 20953,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nodeType": "VariableDeclaration",
            "scope": 20995,
            "src": "576:73:54",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(bytes32 => mapping(address => bool))"
            },
            "typeName": {
              "id": 20952,
              "keyType": {
                "id": 20948,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "584:7:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "576:44:54",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(bytes32 => mapping(address => bool))"
              },
              "valueType": {
                "id": 20951,
                "keyType": {
                  "id": 20949,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "603:7:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "595:24:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 20950,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "614:4:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              21008
            ],
            "body": {
              "id": 20976,
              "nodeType": "Block",
              "src": "866:108:54",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 20964,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20953,
                          "src": "883:20:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 20966,
                        "indexExpression": {
                          "id": 20965,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20956,
                          "src": "904:13:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "883:35:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 20968,
                      "indexExpression": {
                        "id": 20967,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20958,
                        "src": "919:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "883:44:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30783030",
                          "id": 20972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "962:4:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x00"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 20971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "954:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 20970,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "954:7:54",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 20973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "954:13:54",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 20974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "883:84:54",
                    "trueExpression": {
                      "id": 20969,
                      "name": "_ERC1820_ACCEPT_MAGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20947,
                      "src": "930:21:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 20963,
                  "id": 20975,
                  "nodeType": "Return",
                  "src": "876:91:54"
                }
              ]
            },
            "documentation": {
              "id": 20954,
              "nodeType": "StructuredDocumentation",
              "src": "656:77:54",
              "text": " See {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "249cb3fa",
            "id": 20977,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canImplementInterfaceForAddress",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 20960,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "839:8:54"
            },
            "parameters": {
              "id": 20959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20956,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 20977,
                  "src": "779:21:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 20955,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "779:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20958,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 20977,
                  "src": "802:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "778:40:54"
            },
            "returnParameters": {
              "id": 20963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20962,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 20977,
                  "src": "857:7:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 20961,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "856:9:54"
            },
            "scope": 20995,
            "src": "738:236:54",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20993,
              "nodeType": "Block",
              "src": "1304:68:54",
              "statements": [
                {
                  "expression": {
                    "id": 20991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 20985,
                          "name": "_supportedInterfaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20953,
                          "src": "1314:20:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(bytes32 => mapping(address => bool))"
                          }
                        },
                        "id": 20988,
                        "indexExpression": {
                          "id": 20986,
                          "name": "interfaceHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20980,
                          "src": "1335:13:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1314:35:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 20989,
                      "indexExpression": {
                        "id": 20987,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20982,
                        "src": "1350:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1314:44:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 20990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1361:4:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1314:51:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20992,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:51:54"
                }
              ]
            },
            "documentation": {
              "id": 20978,
              "nodeType": "StructuredDocumentation",
              "src": "980:224:54",
              "text": " @dev Declares the contract as willing to be an implementer of\n `interfaceHash` for `account`.\n See {IERC1820Registry-setInterfaceImplementer} and\n {IERC1820Registry-interfaceHash}."
            },
            "id": 20994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterfaceForAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20980,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 20994,
                  "src": "1247:21:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 20979,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20982,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 20994,
                  "src": "1270:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1246:40:54"
            },
            "returnParameters": {
              "id": 20984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1304:0:54"
            },
            "scope": 20995,
            "src": "1209:163:54",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 20996,
        "src": "412:962:54"
      }
    ],
    "src": "33:1342:54"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.1",
  "updatedAt": "2021-02-12T13:42:46.686Z",
  "devdoc": {
    "details": "Implementation of the {IERC1820Implementer} interface. Contracts may inherit from this and call {_registerInterfaceForAddress} to declare their willingness to be implementers. {IERC1820Registry-setInterfaceImplementer} should then be called for the registration to be complete.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "notice": "See {IERC1820Implementer-canImplementInterfaceForAddress}."
      }
    },
    "version": 1
  }
}